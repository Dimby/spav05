/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import { Context } from "./../../context"


declare global {
  interface NexusGenCustomOutputProperties<TypeName extends string> {
    model: NexusPrisma<TypeName, 'model'>
    crud: any
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
  type: "KATEKISTA_DELEGUE" | "MPITANDRINA"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  DateTime: any
}

export interface NexusGenObjects {
  Birao: { // root type
    firstName?: string | null; // String
    fitMis?: string | null; // String
    fonction?: string | null; // String
    id?: string | null; // String
    name?: string | null; // String
    titre?: string | null; // String
    urlPicture?: string | null; // String
    urlPicturePublic?: string | null; // String
  }
  Faritra: { // root type
    fitandremanas?: Array<NexusGenRootTypes['Fitandremana'] | null> | null; // [Fitandremana]
    id: string; // String!
    mpitandrina?: NexusGenRootTypes['Mpitandrina'] | null; // Mpitandrina
    sary?: NexusGenRootTypes['Sary'] | null; // Sary
    sokajy: string; // String!
  }
  Fifandraisana: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    fifandraisana: string; // String!
    id: string; // String!
    mpitandrina?: NexusGenRootTypes['Mpitandrina'] | null; // Mpitandrina
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Fitandremana: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
    lahFar: string; // String!
    lahSp: string; // String!
    mpitandrina?: NexusGenRootTypes['Mpitandrina'] | null; // Mpitandrina
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Mpitandrina: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    fifandraisanas?: Array<NexusGenRootTypes['Fifandraisana'] | null> | null; // [Fifandraisana]
    firstName: string; // String!
    fitandremana?: NexusGenRootTypes['Fitandremana'] | null; // Fitandremana
    id: number; // Int!
    name: string; // String!
    type?: NexusGenEnums['type'] | null; // type
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Mutation: {};
  Query: {};
  Sary: { // root type
    id: string; // String!
    urlPicture?: string | null; // String
    urlPicturePublic?: string | null; // String
  }
  User: { // root type
    email?: string | null; // String
    id?: string | null; // String
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars & NexusGenEnums

export interface NexusGenFieldTypes {
  Birao: { // field return type
    firstName: string | null; // String
    fitMis: string | null; // String
    fonction: string | null; // String
    id: string | null; // String
    name: string | null; // String
    titre: string | null; // String
    urlPicture: string | null; // String
    urlPicturePublic: string | null; // String
  }
  Faritra: { // field return type
    fitandremanas: Array<NexusGenRootTypes['Fitandremana'] | null> | null; // [Fitandremana]
    id: string; // String!
    mpitandrina: NexusGenRootTypes['Mpitandrina'] | null; // Mpitandrina
    sary: NexusGenRootTypes['Sary'] | null; // Sary
    sokajy: string; // String!
  }
  Fifandraisana: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    fifandraisana: string; // String!
    id: string; // String!
    mpitandrina: NexusGenRootTypes['Mpitandrina'] | null; // Mpitandrina
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Fitandremana: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
    lahFar: string; // String!
    lahSp: string; // String!
    mpitandrina: NexusGenRootTypes['Mpitandrina'] | null; // Mpitandrina
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Mpitandrina: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    fifandraisanas: Array<NexusGenRootTypes['Fifandraisana'] | null> | null; // [Fifandraisana]
    firstName: string; // String!
    fitandremana: NexusGenRootTypes['Fitandremana'] | null; // Fitandremana
    id: number; // Int!
    name: string; // String!
    type: NexusGenEnums['type'] | null; // type
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Mutation: { // field return type
    deleteBirao: NexusGenRootTypes['Birao'] | null; // Birao
    deleteMpitandrina: NexusGenRootTypes['Mpitandrina'] | null; // Mpitandrina
    upsertBirao: NexusGenRootTypes['Birao'] | null; // Birao
    upsertMpitandrina: NexusGenRootTypes['Mpitandrina'] | null; // Mpitandrina
  }
  Query: { // field return type
    getAllBirao: Array<NexusGenRootTypes['Birao'] | null> | null; // [Birao]
    getAllMpitandrina: Array<NexusGenRootTypes['Mpitandrina'] | null> | null; // [Mpitandrina]
  }
  Sary: { // field return type
    id: string; // String!
    urlPicture: string | null; // String
    urlPicturePublic: string | null; // String
  }
  User: { // field return type
    email: string | null; // String
    id: string | null; // String
  }
}

export interface NexusGenFieldTypeNames {
  Birao: { // field return type name
    firstName: 'String'
    fitMis: 'String'
    fonction: 'String'
    id: 'String'
    name: 'String'
    titre: 'String'
    urlPicture: 'String'
    urlPicturePublic: 'String'
  }
  Faritra: { // field return type name
    fitandremanas: 'Fitandremana'
    id: 'String'
    mpitandrina: 'Mpitandrina'
    sary: 'Sary'
    sokajy: 'String'
  }
  Fifandraisana: { // field return type name
    createdAt: 'DateTime'
    fifandraisana: 'String'
    id: 'String'
    mpitandrina: 'Mpitandrina'
    updatedAt: 'DateTime'
  }
  Fitandremana: { // field return type name
    createdAt: 'DateTime'
    id: 'String'
    lahFar: 'String'
    lahSp: 'String'
    mpitandrina: 'Mpitandrina'
    updatedAt: 'DateTime'
  }
  Mpitandrina: { // field return type name
    createdAt: 'DateTime'
    fifandraisanas: 'Fifandraisana'
    firstName: 'String'
    fitandremana: 'Fitandremana'
    id: 'Int'
    name: 'String'
    type: 'type'
    updatedAt: 'DateTime'
  }
  Mutation: { // field return type name
    deleteBirao: 'Birao'
    deleteMpitandrina: 'Mpitandrina'
    upsertBirao: 'Birao'
    upsertMpitandrina: 'Mpitandrina'
  }
  Query: { // field return type name
    getAllBirao: 'Birao'
    getAllMpitandrina: 'Mpitandrina'
  }
  Sary: { // field return type name
    id: 'String'
    urlPicture: 'String'
    urlPicturePublic: 'String'
  }
  User: { // field return type name
    email: 'String'
    id: 'String'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    deleteBirao: { // args
      id?: string | null; // String
    }
    deleteMpitandrina: { // args
      id?: number | null; // Int
    }
    upsertBirao: { // args
      firstName?: string | null; // String
      fitMis?: string | null; // String
      fonction?: string | null; // String
      id?: string | null; // String
      name?: string | null; // String
      titre?: string | null; // String
    }
    upsertMpitandrina: { // args
      fifandraisanaId?: string | null; // String
      firstName?: string | null; // String
      fitandremanaId?: string | null; // String
      id?: number | null; // Int
      name?: string | null; // String
      type: NexusGenEnums['type']; // type!
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = never;

export type NexusGenEnumNames = keyof NexusGenEnums;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}